{"version":3,"sources":["jquery.js"],"names":["window","jQuery","selectorOrArray","elements","document","querySelectorAll","Array","oldApi","addClass","className","i","length","classList","add","find","selector","array","concat","from","end","each","fn","call","parent","node","indexOf","parentNode","push","children","print","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,MAAP,GAAgB,UAAUC,eAAV,EAA2B;AACvC;;;AAGA,QAAIC,iBAAJ;AACA,QAAI,OAAOD,eAAP,KAA2B,QAA/B,EAAyC;AACrCC,mBAAWC,SAASC,gBAAT,CAA0BH,eAA1B,CAAX,CADqC,CACkB;AAC1D,KAFD,MAEO,IAAIA,2BAA2BI,KAA/B,EAAsC;AACzCH,mBAAWD,eAAX;AACH;;AAED;AACA,WAAO;AACHK,gBAAQL,gBAAgBK,MADrB,EAC6B;AAChC;AACAC,gBAHG,oBAGMC,SAHN,EAGiB;AAChB;AACA,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIP,SAASQ,MAA7B,EAAqCD,GAArC,EAA0C;AACtCP,yBAASO,CAAT,EAAYE,SAAZ,CAAsBC,GAAtB,CAA0BJ,SAA1B;AACH;AACD,mBAAO,IAAP,CALgB,CAKJ;AACf,SATE;AAUHK,YAVG,gBAUEC,QAVF,EAUY;AACX,gBAAIC,QAAQ,EAAZ;AACA,iBAAK,IAAIN,IAAI,CAAb,EAAgBA,IAAIP,SAASQ,MAA7B,EAAqCD,GAArC,EAA0C;AACtCM,wBAAQA,MAAMC,MAAN,CAAaX,MAAMY,IAAN,CAAWf,SAASO,CAAT,EAAYL,gBAAZ,CAA6BU,QAA7B,CAAX,CAAb,CAAR;AACH;AACDC,kBAAMT,MAAN,GAAe,IAAf,CALW,CAKU;AACrB,mBAAON,OAAOe,KAAP,CAAP;AACH,SAjBE;AAkBHG,WAlBG,iBAkBG;AACF,mBAAO,KAAKZ,MAAZ,CADE,CACkB;AACvB,SApBE;AAqBHa,YArBG,gBAqBEC,EArBF,EAqBM;AACL,iBAAK,IAAIX,IAAI,CAAb,EAAgBA,IAAIP,SAASQ,MAA7B,EAAqCD,GAArC,EAA0C;AACtCW,mBAAGC,IAAH,CAAQ,IAAR,EAAcnB,SAASO,CAAT,CAAd,EAA2BA,CAA3B;AACH;AACD,mBAAO,IAAP;AACH,SA1BE;AA2BHa,cA3BG,oBA2BM;AACL,gBAAMP,QAAQ,EAAd;AACA,iBAAKI,IAAL,CAAU,UAACI,IAAD,EAAU;AAChB,oBAAIR,MAAMS,OAAN,CAAcD,KAAKE,UAAnB,MAAmC,CAAC,CAAxC,EAA2C;AACvCV,0BAAMW,IAAN,CAAWH,KAAKE,UAAhB;AACH;AACJ,aAJD;AAKA,mBAAOzB,OAAOe,KAAP,CAAP;AACH,SAnCE;AAoCHY,gBApCG,sBAoCQ;AACP,gBAAMZ,QAAQ,EAAd;AACA,iBAAKI,IAAL,CAAU,UAACI,IAAD,EAAU;AAChBR,sBAAMW,IAAN,iCAAcH,KAAKI,QAAnB,GADgB,CACa;AAEhC,aAHD;AAIA,mBAAO3B,OAAOe,KAAP,CAAP;AACH,SA3CE;AA4CHa,aA5CG,mBA4CK;AACJC,oBAAQC,GAAR,CAAY5B,QAAZ;AACH;AA9CE,KAAP;AAgDH,CA5DD","file":"jquery.9467f8cc.map","sourceRoot":"../src","sourcesContent":["window.jQuery = function (selectorOrArray) {\n    /*\n    * 选择器或者数组\n    * */\n    let elements;\n    if (typeof selectorOrArray === 'string') {\n        elements = document.querySelectorAll(selectorOrArray); // 获取元素\n    } else if (selectorOrArray instanceof Array) {\n        elements = selectorOrArray;\n    }\n\n    // 返回一个可以操作elements的api\n    return {\n        oldApi: selectorOrArray.oldApi, // 将数组中旧的api赋值给oldapi\n        // 闭包：函数访问外部变量\n        addClass(className) {\n            // 遍历所以刚才获取的元素，添加.red等\n            for (let i = 0; i < elements.length; i++) {\n                elements[i].classList.add(className)\n            }\n            return this;// 能够进行链式操作关键是返回了同样的api对象，this指的就是api\n        },\n        find(selector) {\n            let array = []\n            for (let i = 0; i < elements.length; i++) {\n                array = array.concat(Array.from(elements[i].querySelectorAll(selector)));\n            }\n            array.oldApi = this; // 将旧的api放到数组身上\n            return jQuery(array);\n        },\n        end() {\n            return this.oldApi; // 将当前新的api中旧的api返回\n        },\n        each(fn) {\n            for (let i = 0; i < elements.length; i++) {\n                fn.call(null, elements[i], i);\n            }\n            return this;\n        },\n        parent() {\n            const array = [];\n            this.each((node) => {\n                if (array.indexOf(node.parentNode) === -1) {\n                    array.push(node.parentNode)\n                }\n            })\n            return jQuery(array);\n        },\n        children() {\n            const array = []\n            this.each((node) => {\n                array.push(...node.children) //...把每个节点分开\n\n            })\n            return jQuery(array)\n        },\n        print() {\n            console.log(elements);\n        }\n    }\n}"]}